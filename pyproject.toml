[build-system]
requires = ["hatchling", "hatch-vcs"]
build-backend = "hatchling.build"

[project]
name = "multinterp"
version = "0.1.0"
description = "Multivariate Interpolation"
readme = "README.md"
requires-python = ">=3.10"
license = { file = "LICENSE.txt" }
keywords = ["economics", "interpolation", "modeling", "heterogeneity"]
authors = [{ name = "Alan Lujan", email = "alanlujan91@gmail.com" }]
maintainers = [{ name = "All the contributors" }]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Environment :: Console",
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    "Topic :: Scientific/Engineering",
    "Topic :: Scientific/Engineering :: Mathematics",
    "Topic :: Other/Nonlisted Topic",
    "Natural Language :: English",
    "Operating System :: OS Independent",
    "License :: OSI Approved :: MIT License",
    "License :: OSI Approved",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python",
]
dependencies = ["numpy", "scipy", "numba", "scikit-learn", "scikit-image"]
dynamic = ["version"]

[project.optional-dependencies]
dev = []
docs = [
    "furo",
    "myst_parser >=0.13",
    "sphinx >=4.0",
    "sphinx-copybutton",
    "sphinx-autodoc-typehints",
]
test = ["pytest"]
cupy = ["cupy"]
jax = ["jax", "jaxlib"]

[project.urls]
"Homepage" = "https://github.com/alanlujan91/multinterp"
"Bug Reports" = "https://github.com/alanlujan91/multinterp/issues"
"Source" = "https://github.com/alanlujan91/multinterp/"


# [tool.pytest.ini_options]
# minversion = "6.0"
# addopts = ["-ra", "--showlocals", "--strict-markers", "--strict-config"]
# xfail_strict = true
# filterwarnings = ["error"]
# log_cli_level = "info"
# testpaths = ["tests"]

[tool.ruff]
select = [
    "E",
    "F",
    "W",   # flake8
    "B",   # flake8-bugbear
    "I",   # isort
    "ARG", # flake8-unused-arguments
    "C4",  # flake8-comprehensions
    "EM",  # flake8-errmsg
    "ICN", # flake8-import-conventions
    "ISC", # flake8-implicit-str-concat
    "G",   # flake8-logging-format
    "PGH", # pygrep-hooks
    "PIE", # flake8-pie
    "PL",  # pylint
    "PT",  # flake8-pytest-style
    "PTH", # flake8-use-pathlib
    "RET", # flake8-return
    "RUF", # Ruff-specific
    "SIM", # flake8-simplify
    "T20", # flake8-print
    "UP",  # pyupgrade
    "YTT", # flake8-2020
    "EXE", # flake8-executable
    "NPY", # NumPy specific rules
]
extend-ignore = [
    "PLR",   # Design related pylint codes
    "E501",  # Line too long
    "PT004", # Use underscore for non-returning fixture (use usefixture instead)
]
typing-modules = ["mypackage._compat.typing"]
src = ["src"]
unfixable = [
    "T20",  # Removes print statements
    "F841", # Removes unused variables
]
exclude = []
flake8-unused-arguments.ignore-variadic-names = true
isort.required-imports = ["from __future__ import annotations"]

[tool.ruff.per-file-ignores]
"tests/**" = ["T20"]

[tool.setuptools.dynamic.dependencies]
file = "environment.yml"


[tool.setuptools.packages.find]
# All the following settings are optional:
exclude = ["binder", "Documentation", "examples"]
namespaces = false

[tool.setuptools.package-data]
"*" = ["*.csv", "*.txt"]

[tool.distutils.bdist_wheel]
universal = 1

[tool.hatch]
version.path = "src/<package>/__init__.py"

[tool.mypy]
files = "src"
python_version = "3.8"
strict = true
show_error_codes = true
enable_error_code = ["ignore-without-code", "redundant-expr", "truthy-bool"]
warn_unreachable = true


# You can disable imports or control per-module/file settings here
[[tool.mypy.overrides]]
module = ["numpy.*"]
ignore_missing_imports = true
